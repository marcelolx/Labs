{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService.js';\r\nimport {ConnectionFactory} from './ConnectionFactory.js';\r\nimport {NegociacaoDAO} from '../dao/NegociacaoDAO.js';\r\nimport {Negociacao} from '../models/Negociacao.js';\r\n\r\nexport class NegociacaoService {\r\n\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  obterNegociacoes() {\r\n\r\n      return Promise.all([\r\n          this.obterNegociacoesDaSemana(),\r\n          this.obterNegociacoesDaSemanaAnterior(),\r\n          this.obterNegociacoesDaSemanaRetrasada()\r\n      ]).then(periodos => {\r\n\r\n          let negociacoes = periodos\r\n              .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n          return negociacoes;\r\n\r\n      }).catch(erro => {\r\n          throw new Error(erro);\r\n      });\r\n\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n\r\n    return this._http\r\n        .get('negociacoes/semana')\r\n        .then(negociacoes => {\r\n          return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        })\r\n        .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível obter as negociações da semana!');\r\n        });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n\r\n    return this._http\r\n        .get('negociacoes/anterior')\r\n        .then(negociacoes => {\r\n          return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        })\r\n        .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível obter as negociações da semana anterior!');\r\n        });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n\r\n     return this._http\r\n        .get('negociacoes/retrasada')\r\n        .then(negociacoes => {\r\n          return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        })\r\n        .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível obter as negociações da semana retrasada!');\r\n        });\r\n  }\r\n\r\n  cadastra(negociacao) {\r\n\r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDAO(connection))\r\n      .then(dao => dao.adiciona(negociacao))\r\n      .then(() => 'Negociação adicionada com sucesso!')\r\n      .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível adicionar a negociação!');\r\n      });\r\n  }\r\n\r\n  lista() {\r\n\r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDAO(connection))\r\n      .then(dao => dao.listaTodos())\r\n      .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível obter as negociações!');\r\n      });\r\n  }\r\n\r\n  apaga() {\r\n\r\n    return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => new NegociacaoDAO(connection))\r\n        .then(dao => dao.apagaTodos())\r\n        .then(() => 'Negociações apagadas com sucesso!')\r\n        .catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível apagar as negociações!');\r\n        });\r\n  }\r\n\r\n  importa(listaAtual) {\r\n\r\n    return this.obterNegociacoes()\r\n        .then(negociacoes =>\r\n            negociacoes.filter(negociacao =>\r\n              !listaAtual.some(negociacaoExistente =>\r\n                 negociacao.isEquals(negociacaoExistente)))\r\n      )\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível buscar as negociações para importar!');\r\n      });\r\n  }\r\n\r\n}\r\n"]}