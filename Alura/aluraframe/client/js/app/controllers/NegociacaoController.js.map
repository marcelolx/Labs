{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["CurrentInstance","negociacaoController","ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","coluna","inverteOrdem","ordena","a","b","importa","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes.js';\r\nimport {Mensagem} from '../models/Mensagem.js';\r\nimport {NegociacoesView} from '../views/NegociacoesView.js';\r\nimport {MensagemView} from '../views/MensagemView.js';\r\nimport {NegociacaoService} from '../services/NegociacaoService.js';\r\nimport {DateHelper} from '../helpers/DateHelper.js';\r\nimport {Bind} from '../helpers/Bind.js';\r\nimport {Negociacao} from '../models/Negociacao.js';\r\n\r\nclass NegociacaoController {\r\n\r\n  constructor() {\r\n    /*querySelector vai para o $, porém ainda mantem uma associação com o document*/\r\n    /*pegando os dados no constructor, evita percorrer o DOM toda vez que for chamado*/\r\n    let $ = document.querySelector.bind(document);\r\n    this._inputData = $('#data');\r\n    this._inputQuantidade = $('#quantidade');\r\n    this._inputValor = $('#valor');\r\n\r\n    this._listaNegociacoes = new Bind(new ListaNegociacoes(), new NegociacoesView($('#negociacoesView')), 'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n    this._mensagem = new Bind(new Mensagem(), new MensagemView($('#mensagemView')), 'texto');\r\n    this._ordemAtual = '';\r\n\r\n    this._service = new NegociacaoService();\r\n    this._init();\r\n\r\n    /* Método não usando 100% arrow function\r\n    ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => {\r\n        new NegociacaoDAO(connection)\r\n            .listaTodos()\r\n            .then(negociaocoes => {\r\n\r\n                negociaocoes.forEach(negociacao => {\r\n                    this._listaNegociacoes.adiciona(negociacao);\r\n                });\r\n            });\r\n      });*/\r\n\r\n  }\r\n\r\n  _init() {\r\n\r\n    this._service\r\n        .lista()\r\n        .then(negociacoes =>\r\n          negociacoes.forEach(negociacao =>\r\n            this._listaNegociacoes.adiciona(negociacao)))\r\n        .catch(erro => this._mensagem.texto = erro);\r\n\r\n        setInterval(() => {\r\n          this.importaNegociacoes();\r\n        }, 3000);\r\n  }\r\n\r\n  adiciona(event) {\r\n    event.preventDefault(); //serve para não recarregar a página\r\n\r\n    let negociacao = this._criaNegociacao();\r\n\r\n    this._service\r\n        .cadastra(negociacao)\r\n        .then(mensagem => {\r\n            this._listaNegociacoes.adiciona(negociacao);\r\n            this._mensagem.texto = mensagem;\r\n            this._limpaFormulario();\r\n        })\r\n        .catch(error => this._mensagem.texto = erro);\r\n\r\n  }\r\n\r\n  ordena(coluna) {\r\n\r\n    if (this._ordemAtual == coluna){\r\n        this._listaNegociacoes.inverteOrdem();\r\n    } else {\r\n        this._listaNegociacoes.ordena((a,b) => a[coluna] - b[coluna]);\r\n    }\r\n    this._ordemAtual = coluna;\r\n\r\n  }\r\n\r\n  importaNegociacoes() {\r\n    //Padrão de projeto Promise\r\n    this._service\r\n        .importa(this._listaNegociacoes.negociacoes)\r\n        .then(negociacoes => {\r\n          negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n          this._mensagem.texto = 'Negociações do período importadas com sucesso!';\r\n        })\r\n        .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n    /*\r\n    .obterNegociacoes retorna as negociacoes dos três perídos\r\n    Promise.all([\r\n      service.obterNegociacoes('negociacoes/semana'),\r\n      service.obterNegociacoes('negociacoes/anterior'),\r\n      service.obterNegociacoes('negociacoes/retrasada')]\r\n    ).then((negociacoes) => {\r\n      negociacoes\r\n            .reduce((arrayAchatado, array) => arrayAchatado.concat(array), []) //retorna um único array\r\n            .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n      this._mensagem.texto = 'Negociações importadas com sucesso!';\r\n    })\r\n    .catch((erro) => this._mensagem.texto = erro);\r\n\r\n    */\r\n\r\n    /* Promise de forma assincrona, não respeita a ordem\r\n    service.obterNegociacoesDaSemana()\r\n             .then(negociacoes => {\r\n               negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n               this._mensagem.texto = 'Negociações da semana obtidas com sucesso!';\r\n             })\r\n              .catch(erro => this._mensagem.texto = erro);\r\n\r\n    service.obterNegociacoesDaSemanaAnterior()\r\n            .then(negociacoes => {\r\n              negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n              this._mensagem.texto = 'Negociações da semana passada obtidas com sucesso!';\r\n            })\r\n             .catch(erro => this._mensagem.texto = erro);\r\n\r\n    service.obterNegociacoesDaSemanaRetrasada()\r\n            .then(negociacoes => {\r\n               negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n               this._mensagem.texto = 'Negociações da semana retrasada obtidas com sucesso!';\r\n             })\r\n              .catch(erro => this._mensagem.texto = erro);\r\n    */\r\n\r\n\r\n  apaga() {\r\n\r\n    this._service\r\n        .apaga()\r\n        .then(mensagem => {\r\n            this._mensagem.texto = mensagem;\r\n            this._listaNegociacoes.esvazia();\r\n        })\r\n        .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateHelper.textoParaData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value));\r\n  }\r\n\r\n  _limpaFormulario() {\r\n\r\n    this._inputData.value = '';\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0.0;\r\n    this._inputData.focus();\r\n  }\r\n\r\n}\r\n//let data = new Date(this._inputData.value.replace(/-/g, ','));\r\n//let data = new Date(this._inputData.value.split('-'));\r\n//os três ... entendem que o valor passado tem que ser splitado em três valores\r\n//varre o array com o map e decrementa um valor no segundo parametro passado como um indice\r\n/*let data = new Date(...\r\n  this._inputData.value\r\n      .split('-')\r\n      .map(function(item, indice) {\r\n        //quando for o indice 1, o modulo será um e vai decrementar 1. somente para datas\r\n        return item - indice % 2;\r\n      })\r\n);*/\r\n\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function CurrentInstance() {\r\n\r\n  return negociacaoController;\r\n}\r\n"]}