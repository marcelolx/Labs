{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAAaA,U;AAEX,8BAAc;AAAA;;AACZ,gBAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED;AACA;;;;;wCACqBC,I,EAAM;AACzB,mBAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACD;;;wCAEoBC,K,EAAO;AAC1B;AACA;AACA,gBAAI,CAAC,wBAAwBC,IAAxB,CAA6BD,KAA7B,CAAL,EACG,MAAM,IAAIL,KAAJ,CAAU,kCAAV,CAAN;AACH,sDAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,qBAAkBD,OAAOC,SAAS,CAAlC;AAAA,aAA/B,CAAnB;AACD","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n  constructor() {\r\n    throw new Error('DateHelper não pode ser instânciado.');\r\n  }\r\n\r\n  //evita criar uma instância da classe\r\n  //templateString usa crase = ``\r\n  static dataParaTexto(data) {\r\n    return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\r\n  }\r\n\r\n  static textoParaData(texto) {\r\n    //arrow function, já entende que tem que dar o return, exemplo só para uma linha, para mais precisa das chaves\r\n    //expressão regular\r\n    if (!/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(texto))\r\n       throw new Error('Deve estar no formato dd/mm/aaaa');\r\n    return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\r\n  }\r\n\r\n}\r\n"]}